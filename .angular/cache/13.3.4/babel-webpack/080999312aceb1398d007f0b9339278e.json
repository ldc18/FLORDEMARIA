{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/env-configuration.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@tinymce/tinymce-angular\";\nimport * as i4 from \"@angular/forms\";\n\nconst _c0 = function () {\n  return [\"image\", \"media\", \"link\", \"code\"];\n};\n\nconst _c1 = function (a0) {\n  return {\n    plugins: a0\n  };\n};\n\nfunction TinyEditorComponent_editor_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"editor\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function TinyEditorComponent_editor_0_Template_editor_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEditorChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const editorApiKey_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"apiKey\", editorApiKey_r1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.description)(\"init\", i0.ɵɵpureFunction1(4, _c1, i0.ɵɵpureFunction0(3, _c0)));\n  }\n}\n\nexport let TinyEditorComponent = /*#__PURE__*/(() => {\n  class TinyEditorComponent {\n    constructor(envConfigurationService) {\n      this.description = '';\n      this.editorContentChange = new EventEmitter();\n      this.editorApiKey$ = envConfigurationService.getConfigType$('FE_TINYMCE_API_KEY');\n    }\n\n    onEditorChange(value) {\n      this.editorContentChange.emit(value);\n    }\n\n  }\n\n  TinyEditorComponent.ɵfac = function TinyEditorComponent_Factory(t) {\n    return new (t || TinyEditorComponent)(i0.ɵɵdirectiveInject(i1.EnvConfigurationService));\n  };\n\n  TinyEditorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TinyEditorComponent,\n    selectors: [[\"app-tiny-editor\"]],\n    inputs: {\n      description: \"description\"\n    },\n    outputs: {\n      editorContentChange: \"editorContentChange\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"apiKey\", \"ngModel\", \"init\", \"ngModelChange\", 4, \"ngIf\"], [3, \"apiKey\", \"ngModel\", \"init\", \"ngModelChange\"]],\n    template: function TinyEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TinyEditorComponent_editor_0_Template, 1, 6, \"editor\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.editorApiKey$));\n      }\n    },\n    directives: [i2.NgIf, i3.EditorComponent, i4.NgControlStatus, i4.NgModel],\n    pipes: [i2.AsyncPipe],\n    styles: [\"\"]\n  });\n  return TinyEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}