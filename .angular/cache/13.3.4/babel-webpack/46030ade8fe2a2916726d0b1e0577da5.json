{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let JsonLDService = /*#__PURE__*/(() => {\n  class JsonLDService {\n    constructor(_document) {\n      this._document = _document;\n      this.scriptType = 'application/ld+json';\n      this.websiteSchema = {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        'url': 'https://smrtic.eu',\n        'name': 'Eshop MEAN',\n        'description': 'Angular - Node.js - Eshop application - MEAN Eshop with dashboard',\n        'image': 'https://res.cloudinary.com/dnpgh1vhi/image/upload/v1615640124/logo1_gvrmpd.svg',\n        'keywords': 'MEAN, Angular, Node, MongoDB, Express, Nest.js, Cart, Google login, Dashboard'\n      };\n      this.orgSchema = {\n        \"@context\": \"https://schema.org/\",\n        \"@type\": \"Organization\",\n        \"name\": \"Miroslav Smrtic\",\n        \"url\": \"https://smrtic.eu\",\n        \"logo\": \"https://res.cloudinary.com/dnpgh1vhi/image/upload/v1615640124/logo1_gvrmpd.svg\",\n        \"email\": \"miro218@gmail.com\",\n        \"description\": \"Developer\",\n        \"contactPoint\": {\n          \"contactType\": \"PR\",\n          \"@type\": \"ContactPoint\",\n          \"email\": \"miro218@gmail.com\"\n        }\n      };\n    }\n\n    removeStructuredData(className) {\n      const els = [];\n      ['structured-data', 'structured-data-org', className].filter(Boolean).forEach(c => {\n        els.push(...Array.from(this._document.head.getElementsByClassName(c)));\n      });\n      els.forEach(el => this._document.head.removeChild(el));\n    }\n\n    insertSchema(schema, className = 'structured-data') {\n      let script;\n      let shouldAppend = false;\n\n      if (this._document.head.getElementsByClassName(className).length) {\n        script = this._document.head.getElementsByClassName(className)[0];\n      } else {\n        script = this._document.createElement('script');\n        shouldAppend = true;\n      }\n\n      script.setAttribute('class', className);\n      script.type = this.scriptType;\n      script.text = JSON.stringify(schema);\n\n      if (shouldAppend) {\n        this._document.head.appendChild(script);\n      }\n    }\n\n  }\n\n  JsonLDService.ɵfac = function JsonLDService_Factory(t) {\n    return new (t || JsonLDService)(i0.ɵɵinject(DOCUMENT));\n  };\n\n  JsonLDService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JsonLDService,\n    factory: JsonLDService.ɵfac,\n    providedIn: 'root'\n  });\n  return JsonLDService;\n})();","map":null,"metadata":{},"sourceType":"module"}