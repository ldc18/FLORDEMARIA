{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { map, take, filter } from 'rxjs/operators';\nimport * as actions from '../../../store/actions';\nimport { accessTokenKey } from '../../../shared/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngrx/store\";\nexport let JwtTokenComponent = /*#__PURE__*/(() => {\n  class JwtTokenComponent {\n    constructor(route, router, store, platformId) {\n      this.route = route;\n      this.router = router;\n      this.store = store;\n      this.platformId = platformId;\n      this.route.params.pipe(map(params => params['accessToken']), take(1), filter(() => isPlatformBrowser(this.platformId))).subscribe(accessToken => {\n        localStorage.setItem(accessTokenKey, accessToken);\n        this.store.dispatch(new actions.StoreUser({\n          accessToken: accessToken\n        }));\n        this.store.dispatch(new actions.GetUser());\n        this.router.navigate(['/']);\n      });\n    }\n\n  }\n\n  JwtTokenComponent.ɵfac = function JwtTokenComponent_Factory(t) {\n    return new (t || JwtTokenComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Store), i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  JwtTokenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JwtTokenComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 0,\n    vars: 0,\n    template: function JwtTokenComponent_Template(rf, ctx) {},\n    styles: [\"\"]\n  });\n  return JwtTokenComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}