{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport * as fromRoot from '../../../store/reducers';\nimport * as actions from '../../../store/actions';\nimport { MatTabGroup } from '@angular/material/tabs';\nlet DashboardComponent = class DashboardComponent {\n  constructor(translate, store) {\n    this.translate = translate;\n    this.store = store;\n    this.productAction = '';\n    this.component = 'dashboard';\n    this.lang$ = this.translate.getLang$();\n    this.currency$ = this.store.select(fromRoot.getCurrency);\n    this.allProducts$ = this.store.select(fromRoot.getAllProducts);\n    this.allProductsTitles$ = this.store.select(fromRoot.getAllProducts).pipe(map(products => products.map(product => product.titleUrl)));\n    this.getAllProducts();\n  }\n\n  changeAction(action) {\n    this.productAction = this.productAction === action ? '' : action;\n  }\n\n  getProducts() {\n    this.store.dispatch(new actions.GetAllProducts());\n  }\n\n  setToEditProduct(titleUrl) {\n    this.productToEditTitleUrl = titleUrl;\n    this.tabGroup.selectedIndex = 2;\n    this.store.dispatch(new actions.UpdatePosition({\n      dashboard: 0\n    }));\n  }\n\n  changeTab(tab) {\n    this.tabGroup.selectedIndex = tab;\n    this.store.dispatch(new actions.GetAllProducts());\n  }\n\n  ngOnDestroy() {\n    this.getProductsSub.unsubscribe();\n  }\n\n  getAllProducts() {\n    this.getProductsSub = this.lang$.subscribe(lang => {\n      this.store.dispatch(new actions.GetAllProducts());\n    });\n  }\n\n};\n\n__decorate([ViewChild(MatTabGroup)], DashboardComponent.prototype, \"tabGroup\", void 0);\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})], DashboardComponent);\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module"}