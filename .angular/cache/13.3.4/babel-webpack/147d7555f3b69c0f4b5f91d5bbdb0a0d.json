{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport * as tinycolor from 'tinycolor2';\nimport * as i0 from \"@angular/core\";\nexport let ThemeService = /*#__PURE__*/(() => {\n  class ThemeService {\n    constructor(document) {\n      this.document = document;\n\n      this.setThemeColor = (themeColor, type) => {\n        const colorPalette = this.computeColors(themeColor);\n\n        for (const color of colorPalette) {\n          const key1 = `--${type}-${color.name}`;\n          const value1 = color.hex;\n          const key2 = `--${type}-contrast-${color.name}`;\n          const value2 = color.darkContrast ? 'rgba(0,0,0, 0.87)' : 'rgba(255,255,255, 0.8)';\n          this.document.documentElement.style.setProperty(key1, value1);\n          this.document.documentElement.style.setProperty(key2, value2);\n        }\n      };\n    }\n\n    setCSSVariable(color, type) {\n      this.document.documentElement.style.setProperty(`--${type}`, color);\n    }\n\n    computeColors(hex) {\n      return [this.getColorObject(tinycolor(hex).lighten(52), '50'), this.getColorObject(tinycolor(hex).lighten(37), '100'), this.getColorObject(tinycolor(hex).lighten(26), '200'), this.getColorObject(tinycolor(hex).lighten(12), '300'), this.getColorObject(tinycolor(hex).lighten(6), '400'), this.getColorObject(tinycolor(hex), '500'), this.getColorObject(tinycolor(hex).darken(6), '600'), this.getColorObject(tinycolor(hex).darken(12), '700'), this.getColorObject(tinycolor(hex).darken(18), '800'), this.getColorObject(tinycolor(hex).darken(24), '900'), this.getColorObject(tinycolor(hex).lighten(50).saturate(30), 'A100'), this.getColorObject(tinycolor(hex).lighten(30).saturate(30), 'A200'), this.getColorObject(tinycolor(hex).lighten(10).saturate(15), 'A400'), this.getColorObject(tinycolor(hex).lighten(5).saturate(5), 'A700')];\n    }\n\n    getColorObject(value, name) {\n      const c = tinycolor(value);\n      return {\n        name: name,\n        hex: c.toHexString(),\n        darkContrast: c.isLight()\n      };\n    }\n\n  }\n\n  ThemeService.ɵfac = function ThemeService_Factory(t) {\n    return new (t || ThemeService)(i0.ɵɵinject(DOCUMENT));\n  };\n\n  ThemeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeService,\n    factory: ThemeService.ɵfac,\n    providedIn: 'root'\n  });\n  return ThemeService;\n})();","map":null,"metadata":{},"sourceType":"module"}