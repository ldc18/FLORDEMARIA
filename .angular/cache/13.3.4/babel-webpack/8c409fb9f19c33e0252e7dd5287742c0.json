{"ast":null,"code":"import { LazyViewport } from './lazy-viewport';\nimport * as i0 from \"@angular/core\"; // ----------------------------------------------------------------------------------- //\n// ----------------------------------------------------------------------------------- //\n\nexport let LazyModule = /*#__PURE__*/(() => {\n  class LazyModule {}\n\n  LazyModule.ɵfac = function LazyModule_Factory(t) {\n    return new (t || LazyModule)();\n  };\n\n  LazyModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: LazyModule\n  });\n  LazyModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [// Setup the default LazyViewport instance without an associated element. This\n    // will create a IntersectionObserver that uses the browser's viewport as the\n    // observer root. This way, an instance of LazyViewport is always available for\n    // injection into other directives and services.\n    // --\n    // NOTE: This service will be overridden at lower-levels in the component tree\n    // whenever a [lazyViewport] directive is applied.\n    {\n      provide: LazyViewport,\n      useFactory: function () {\n        var viewport = new LazyViewport();\n        viewport.setup();\n        return viewport;\n      }\n    }]\n  });\n  return LazyModule;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}